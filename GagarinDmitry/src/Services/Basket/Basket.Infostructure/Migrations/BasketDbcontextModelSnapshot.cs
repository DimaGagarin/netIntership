// <auto-generated />
using System;
using Basket.Infostructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Basket.Infostructure.Migrations
{
    [DbContext(typeof(BasketDbcontext))]
    partial class BasketDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Basket.Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DateOfPurchase")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<int>("Seat")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfPurchase = new DateTimeOffset(new DateTime(2022, 7, 28, 15, 25, 52, 789, DateTimeKind.Unspecified).AddTicks(3818), new TimeSpan(0, 3, 0, 0, 0)),
                            Price = 212,
                            Row = 1,
                            Seat = 1,
                            SessionId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfPurchase = new DateTimeOffset(new DateTime(2022, 7, 28, 15, 25, 52, 789, DateTimeKind.Unspecified).AddTicks(3852), new TimeSpan(0, 3, 0, 0, 0)),
                            Price = 212,
                            Row = 1,
                            Seat = 2,
                            SessionId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
